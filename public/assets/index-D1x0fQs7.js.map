{"version":3,"mappings":"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","names":["ThemeContext","createContext","ThemeProvider","children","theme","setTheme","useState","useEffect","savedTheme","prefersDark","root","toggleTheme","useCallback","curr","jsx","useTheme","context","useContext","allowedRoles","ProtectedRoute","location","useLocation","user","role","e","isAuthenticated","isAuthorized","Navigate","Outlet","LoadingFallback","jsxs","IndexPage","lazy","__vitePreload","LoginPage","SecretRoomPage","AdminPage","CustomerAssessmentSummary","NotFoundPage","AppRoutes","Suspense","Routes","Route","RootApp","React","BrowserRouter","rootElement","ReactDOM"],"ignoreList":[],"sources":["../../src/components/ThemeProvider.tsx","../../src/components/ProtectedRoute.tsx","../../src/components/common/LoadingFallback.tsx","../../src/routes/AppRoutes.tsx","../../src/main.tsx"],"sourcesContent":["// src/components/ThemeProvider.tsx\n// ‚úÖ Theme context with system preference detection, localStorage sync, and toggle\n\nimport React, {\n  createContext,\n  useState,\n  useEffect,\n  useContext,\n  type ReactNode,\n  useCallback,\n} from 'react'\n\ntype Theme = 'light' | 'dark'\n\ninterface ThemeContextValue {\n  theme: Theme\n  toggleTheme: () => void\n}\n\nconst ThemeContext = createContext<ThemeContextValue | undefined>(undefined)\n\ninterface ThemeProviderProps {\n  children: ReactNode\n}\n\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {\n  const [theme, setTheme] = useState<Theme>('light')\n\n  // ‡πÇ‡∏´‡∏•‡∏î‡∏ò‡∏µ‡∏°‡∏à‡∏≤‡∏Å localStorage ‡∏´‡∏£‡∏∑‡∏≠ system preference ‡∏ï‡∏≠‡∏ô mount\n  useEffect(() => {\n    try {\n      const savedTheme = localStorage.getItem('theme') as Theme | null\n      const prefersDark = window.matchMedia?.('(prefers-color-scheme: dark)').matches\n      if (savedTheme === 'light' || savedTheme === 'dark') {\n        setTheme(savedTheme)\n      } else {\n        setTheme(prefersDark ? 'dark' : 'light')\n      }\n    } catch {\n      setTheme('light')\n    }\n  }, [])\n\n  // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï class ‡πÉ‡∏ô root ‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å localStorage ‡πÄ‡∏°‡∏∑‡πà‡∏≠ theme ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô\n  useEffect(() => {\n    const root = document.documentElement\n    if (theme === 'dark') {\n      root.classList.add('dark')\n    } else {\n      root.classList.remove('dark')\n    }\n    try {\n      localStorage.setItem('theme', theme)\n    } catch {\n      // ignore write error\n    }\n  }, [theme])\n\n  // toggle ‡∏ò‡∏µ‡∏°‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á light ‡∏Å‡∏±‡∏ö dark\n  const toggleTheme = useCallback(() => {\n    setTheme(curr => (curr === 'light' ? 'dark' : 'light'))\n  }, [])\n\n  return <ThemeContext.Provider value={{ theme, toggleTheme }}>{children}</ThemeContext.Provider>\n}\n\n// Hook ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ThemeContext ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ô‡∏≠‡∏Å Provider\nexport const useTheme = (): ThemeContextValue => {\n  const context = useContext(ThemeContext)\n  if (!context) throw new Error('useTheme must be used within ThemeProvider')\n  return context\n}\n","// src/components/ProtectedRoute.tsx\n// ‚úÖ Secure route guard with role-based access, localStorage validation, and redirect handling\n\nimport React from 'react'\nimport { Navigate, Outlet, useLocation } from 'react-router-dom'\n\nconst allowedRoles = ['user', 'admin'] as const\ntype AllowedRole = (typeof allowedRoles)[number]\n\nconst ProtectedRoute: React.FC = () => {\n  const location = useLocation()\n\n  let user: string | null = null\n  let role: string | null = null\n\n  try {\n    user = localStorage.getItem('loggedInUser')?.trim() || null\n    role = localStorage.getItem('userRole')?.trim() || null\n  } catch (e) {\n    console.error('üîê Error accessing localStorage:', e)\n    user = null\n    role = null\n  }\n\n  const isAuthenticated = Boolean(user)\n  const isAuthorized = role !== null && allowedRoles.includes(role as AllowedRole)\n\n  if (!isAuthenticated || !isAuthorized) {\n    return <Navigate to=\"/login\" replace state={{ from: location.pathname }} />\n  }\n\n  return <Outlet />\n}\n\nexport default ProtectedRoute\n","// src/components/common/LoadingFallback.tsx\n// ‚úÖ Reusable loading fallback spinner with accessible text, Tailwind + DaisyUI + dark mode support\n\nimport React from 'react'\n\nconst LoadingFallback: React.FC = () => {\n  return (\n    <div\n      role=\"status\"\n      aria-live=\"polite\"\n      aria-busy=\"true\"\n      className=\"flex flex-col items-center justify-center py-10\"\n    >\n      <svg\n        className=\"h-10 w-10 animate-spin text-primary\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        aria-hidden=\"true\"\n      >\n        <circle\n          className=\"opacity-25\"\n          cx=\"12\"\n          cy=\"12\"\n          r=\"10\"\n          stroke=\"currentColor\"\n          strokeWidth=\"4\"\n        />\n        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8v4a4 4 0 00-4 4H4z\" />\n      </svg>\n      <span className=\"mt-3 select-none text-sm font-medium text-gray-700 dark:text-gray-300\">\n        ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...\n      </span>\n    </div>\n  )\n}\n\nexport default LoadingFallback\n","// src/routes/AppRoutes.tsx\n// ‚úÖ Centralized, scalable routing with theme props, protected nested routes, lazy loading, Tailwind + DaisyUI + A11y ready\n\nimport React, { Suspense, lazy } from 'react'\nimport { Routes, Route } from 'react-router-dom'\n\nimport ProtectedRoute from '@components/ProtectedRoute'\nimport { useTheme } from '@components/ThemeProvider'\nimport LoadingFallback from '@components/common/LoadingFallback'\n\n// Lazy loaded pages\nconst IndexPage = lazy(() => import('@pages/IndexPage'))\nconst LoginPage = lazy(() => import('@pages/LoginPage'))\nconst SecretRoomPage = lazy(() => import('@pages/SecretRoomPage'))\nconst AdminPage = lazy(() => import('@pages/AdminPage'))\nconst CustomerAssessmentSummary = lazy(() => import('@pages/CustomerAssessmentSummary'))\nconst NotFoundPage = lazy(() => import('@pages/NotFoundPage'))\n\nconst AppRoutes: React.FC = () => {\n  const { theme, toggleTheme } = useTheme()\n\n  return (\n    <Suspense fallback={<LoadingFallback />}>\n      <Routes>\n        {/* Public Routes */}\n        <Route index element={<IndexPage theme={theme} toggleTheme={toggleTheme} />} />\n        <Route path=\"/login\" element={<LoginPage />} />\n\n        {/* Protected Routes */}\n        <Route element={<ProtectedRoute />}>\n          <Route path=\"/secret\" element={<SecretRoomPage />} />\n          <Route path=\"/admin\" element={<AdminPage />} />\n          <Route path=\"/customer-assessment-summary\" element={<CustomerAssessmentSummary />} />\n        </Route>\n\n        {/* 404 fallback */}\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Routes>\n    </Suspense>\n  )\n}\n\nexport default AppRoutes\n","// src/main.tsx\n// ‚úÖ Root app entry with ThemeProvider, Router, Suspense fallback, and strict mode\n\nimport React, { Suspense } from 'react'\nimport ReactDOM from 'react-dom/client'\nimport { BrowserRouter } from 'react-router-dom'\n\n// Global styles\nimport '@/styles/tailwind-base.css'\nimport '@/styles/tailwind.css'\nimport '@/styles/global.css'\n\n// Providers & Routes\nimport { ThemeProvider } from '@components/ThemeProvider'\nimport AppRoutes from './routes/AppRoutes'\nimport LoadingFallback from '@components/common/LoadingFallback'\n\nconst RootApp: React.FC = () => (\n  <React.StrictMode>\n    <ThemeProvider>\n      <BrowserRouter basename={import.meta.env.BASE_URL || '/'}>\n        <Suspense fallback={<LoadingFallback />}>\n          <AppRoutes />\n        </Suspense>\n      </BrowserRouter>\n    </ThemeProvider>\n  </React.StrictMode>\n)\n\nconst rootElement = document.getElementById('root')\n\nif (!rootElement) {\n  console.error('‚ùå <div id=\"root\"> not found in index.html')\n} else {\n  ReactDOM.createRoot(rootElement).render(<RootApp />)\n}\n\nexport default RootApp\n"],"file":"assets/index-D1x0fQs7.js"}