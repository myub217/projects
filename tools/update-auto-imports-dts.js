// update-auto-imports-dts.js :: ESM style
import { writeFile } from 'fs/promises';
import path from 'path';
import { fileURLToPath } from 'url';

const __dirname = path.dirname(fileURLToPath(import.meta.url));

// ‡∏£‡∏±‡∏ö input ‡πÄ‡∏õ‡πá‡∏ô JSON string
const input = process.argv[2];
if (!input) {
  console.error('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö input json');
  process.exit(1);
}

let imports;
try {
  imports = JSON.parse(input);
} catch (err) {
  console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏õ‡∏•‡∏á JSON ‡πÑ‡∏î‡πâ:', err.message);
  process.exit(1);
}

const dtsPath = path.resolve(__dirname, '../src/auto-imports.d.ts');

// ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô header ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏® global
const lines = [
  `// üö® DO NOT EDIT THIS FILE`,
  `// Auto-generated by tools/update-auto-imports-dts.js`,
  ``,
  `declare global {`,
];

for (const entry of imports) {
  // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô entry ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
  if (entry.name && entry.from) {
    lines.push(
      `  const ${entry.name}: typeof import("${entry.from}")["${entry.name}"];`,
    );
  }
}

lines.push(`}\n\nexport {};`);

// ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÑ‡∏ü‡∏•‡πå
try {
  await writeFile(dtsPath, lines.join('\n'), 'utf-8');
  console.log(`‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á auto-imports.d.ts (${imports.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)`);
} catch (err) {
  console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÑ‡∏ü‡∏•‡πå:', err.message);
  process.exit(1);
}
